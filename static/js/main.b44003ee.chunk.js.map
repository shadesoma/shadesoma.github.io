{"version":3,"sources":["routes lazy /^/.//.*$/ groupOptions: {} namespace object","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","assets/icons/dead-end.jpg","routes/The404Page.tsx","view/components/common/spinner/spinner.tsx","services/token-storage.ts","services/base-url.ts","services/http-fetch-implementations/http-native-fetch.ts","services/http-fetch.ts","view/components/root/root.tsx","view/hooks/user.ts","view/App.tsx","view/hooks/routes.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","The404Page","style","color","className","Button","variant","Typography","src","deadEnd","alt","width","Spinner","valueText","textAlign","tokenStorageKey","tokenStorage","getToken","localStorage","getItem","setToken","newToken","setItem","removeToken","removeItem","baseUrl","createFetchRequest","url","params","data","type","token","URLSearchParams","method","mode","cache","credentials","redirect","referrer","body","undefined","JSON","stringify","ok","json","httpFetch","post","put","Root","props","children","useUser","path","pathname","useState","first_name","is_token_attached","last_name","login","middle_name","organizations","role","kis_art_id","user","setUser","loading","setLoading","getUser","a","res","getUserCallback","useCallback","useEffect","UserContext","createContext","routes","route","exact","component","React","lazy","fallback","Provider","value","enableLogging","utils","DateFnsUtils","locale","ruLocale"],"mappings":"wIAAA,IAAIA,EAAM,CACT,eAAgB,CACf,GACA,GAED,mBAAoB,CACnB,GACA,GAED,gBAAiB,CAChB,GACA,EACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,EACA,IAED,oBAAqB,CACpB,GACA,EACA,EACA,IAED,yBAA0B,CACzB,GACA,EACA,IAED,6BAA8B,CAC7B,GACA,EACA,IAED,wBAAyB,CACxB,GACA,EACA,EACA,IAED,oCAAqC,CACpC,IACA,EACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,EACA,IAED,sBAAuB,CACtB,GACA,EACA,EACA,IAED,2BAA4B,CAC3B,GACA,EACA,IAED,+BAAgC,CAC/B,IACA,EACA,IAED,+BAAgC,CAC/B,GACA,EACA,IAED,0BAA2B,CAC1B,GACA,EACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,cAAe,CACd,GACA,EACA,IAED,uBAAwB,CACvB,GACA,EACA,IAED,2BAA4B,CAC3B,GACA,EACA,IAED,SAAU,CACT,GACA,EACA,GAED,aAAc,CACb,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,mBAAoB,CACnB,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,IAED,cAAe,CACd,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,GAED,qBAAsB,CACrB,GACA,EACA,GAED,mBAAoB,CACnB,GACA,EACA,EACA,EACA,GAED,uBAAwB,CACvB,GACA,EACA,EACA,EACA,GAED,kDAAmD,CAClD,GACA,EACA,EACA,EACA,IAED,4DAA6D,CAC5D,GACA,EACA,EACA,EACA,IAED,gEAAiE,CAChE,GACA,EACA,EACA,EACA,IAED,sDAAuD,CACtD,IACA,EACA,IAED,sDAAuD,CACtD,GACA,EACA,EACA,EACA,IAED,aAAc,CACb,GACA,EACA,IAED,iBAAkB,CACjB,GACA,EACA,IAED,WAAY,CACX,GACA,EACA,EACA,IAED,eAAgB,CACf,GACA,EACA,EACA,IAED,yBAA0B,CACzB,GACA,EACA,GAED,6BAA8B,CAC7B,GAC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","file":"static/js/main.b44003ee.chunk.js","sourcesContent":["var map = {\n\t\"./The404Page\": [\n\t\t44,\n\t\t9\n\t],\n\t\"./The404Page.tsx\": [\n\t\t44,\n\t\t9\n\t],\n\t\"./add-company\": [\n\t\t93,\n\t\t9,\n\t\t0,\n\t\t17\n\t],\n\t\"./add-company.tsx\": [\n\t\t93,\n\t\t9,\n\t\t0,\n\t\t17\n\t],\n\t\"./company/company\": [\n\t\t89,\n\t\t9,\n\t\t0,\n\t\t16\n\t],\n\t\"./company/company-list\": [\n\t\t94,\n\t\t9,\n\t\t15\n\t],\n\t\"./company/company-list.tsx\": [\n\t\t94,\n\t\t9,\n\t\t15\n\t],\n\t\"./company/company.tsx\": [\n\t\t89,\n\t\t9,\n\t\t0,\n\t\t16\n\t],\n\t\"./employee/add-employee-container\": [\n\t\t102,\n\t\t9,\n\t\t0,\n\t\t18\n\t],\n\t\"./employee/add-employee-container.tsx\": [\n\t\t102,\n\t\t9,\n\t\t0,\n\t\t18\n\t],\n\t\"./employee/employee\": [\n\t\t95,\n\t\t9,\n\t\t0,\n\t\t20\n\t],\n\t\"./employee/employee-list\": [\n\t\t81,\n\t\t9,\n\t\t13\n\t],\n\t\"./employee/employee-list.css\": [\n\t\t138,\n\t\t7,\n\t\t29\n\t],\n\t\"./employee/employee-list.tsx\": [\n\t\t81,\n\t\t9,\n\t\t13\n\t],\n\t\"./employee/employee.tsx\": [\n\t\t95,\n\t\t9,\n\t\t0,\n\t\t20\n\t],\n\t\"./error\": [\n\t\t82,\n\t\t9,\n\t\t24\n\t],\n\t\"./error.tsx\": [\n\t\t82,\n\t\t9,\n\t\t24\n\t],\n\t\"./forgotten-password\": [\n\t\t83,\n\t\t9,\n\t\t25\n\t],\n\t\"./forgotten-password.tsx\": [\n\t\t83,\n\t\t9,\n\t\t25\n\t],\n\t\"./home\": [\n\t\t90,\n\t\t9,\n\t\t3\n\t],\n\t\"./home.tsx\": [\n\t\t90,\n\t\t9,\n\t\t3\n\t],\n\t\"./inspection\": [\n\t\t91,\n\t\t9,\n\t\t8\n\t],\n\t\"./inspection.tsx\": [\n\t\t91,\n\t\t9,\n\t\t8\n\t],\n\t\"./login\": [\n\t\t88,\n\t\t9,\n\t\t12\n\t],\n\t\"./login.tsx\": [\n\t\t88,\n\t\t9,\n\t\t12\n\t],\n\t\"./medical-list\": [\n\t\t96,\n\t\t9,\n\t\t4\n\t],\n\t\"./medical-list.tsx\": [\n\t\t96,\n\t\t9,\n\t\t4\n\t],\n\t\"./new-inspection\": [\n\t\t97,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t9\n\t],\n\t\"./new-inspection.tsx\": [\n\t\t97,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t9\n\t],\n\t\"./new-medical-inspection/new-medical-inspection\": [\n\t\t80,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t11\n\t],\n\t\"./new-medical-inspection/new-medical-inspection-container\": [\n\t\t84,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t10\n\t],\n\t\"./new-medical-inspection/new-medical-inspection-container.tsx\": [\n\t\t84,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t10\n\t],\n\t\"./new-medical-inspection/new-medical-inspection.css\": [\n\t\t136,\n\t\t7,\n\t\t30\n\t],\n\t\"./new-medical-inspection/new-medical-inspection.tsx\": [\n\t\t80,\n\t\t9,\n\t\t0,\n\t\t1,\n\t\t11\n\t],\n\t\"./operator\": [\n\t\t98,\n\t\t9,\n\t\t23\n\t],\n\t\"./operator.tsx\": [\n\t\t98,\n\t\t9,\n\t\t23\n\t],\n\t\"./result\": [\n\t\t99,\n\t\t9,\n\t\t0,\n\t\t22\n\t],\n\t\"./result.tsx\": [\n\t\t99,\n\t\t9,\n\t\t0,\n\t\t22\n\t],\n\t\"./technical-inspection\": [\n\t\t87,\n\t\t9,\n\t\t2\n\t],\n\t\"./technical-inspection.tsx\": [\n\t\t87,\n\t\t9,\n\t\t2\n\t],\n\t\"./technical-inspections-list\": [\n\t\t100,\n\t\t9,\n\t\t5\n\t],\n\t\"./technical-inspections-list.tsx\": [\n\t\t100,\n\t\t9,\n\t\t5\n\t],\n\t\"./vehicle/add-vehicle-container\": [\n\t\t103,\n\t\t9,\n\t\t0,\n\t\t19\n\t],\n\t\"./vehicle/add-vehicle-container.tsx\": [\n\t\t103,\n\t\t9,\n\t\t0,\n\t\t19\n\t],\n\t\"./vehicle/vehicle\": [\n\t\t101,\n\t\t9,\n\t\t0,\n\t\t21\n\t],\n\t\"./vehicle/vehicle-list\": [\n\t\t85,\n\t\t9,\n\t\t14\n\t],\n\t\"./vehicle/vehicle-list.css\": [\n\t\t139,\n\t\t7,\n\t\t31\n\t],\n\t\"./vehicle/vehicle-list.tsx\": [\n\t\t85,\n\t\t9,\n\t\t14\n\t],\n\t\"./vehicle/vehicle.tsx\": [\n\t\t101,\n\t\t9,\n\t\t0,\n\t\t21\n\t],\n\t\"./waybills/waybills\": [\n\t\t86,\n\t\t9,\n\t\t7\n\t],\n\t\"./waybills/waybills-lists\": [\n\t\t92,\n\t\t9,\n\t\t6\n\t],\n\t\"./waybills/waybills-lists.tsx\": [\n\t\t92,\n\t\t9,\n\t\t6\n\t],\n\t\"./waybills/waybills.css\": [\n\t\t140,\n\t\t7,\n\t\t32\n\t],\n\t\"./waybills/waybills.tsx\": [\n\t\t86,\n\t\t9,\n\t\t7\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 114;\nmodule.exports = webpackAsyncContext;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n/* eslint-disable no-console */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './view/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/dead-end.d4ac0778.jpg\";","import React from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport deadEnd from '../assets/icons/dead-end.jpg';\n\nconst The404Page = () => {\n  return (\n    <div>\n      <h1 style={{ color: 'red' }}>Ошибка 404</h1>\n      <div className=\"mb-3\">\n        <Button href=\"/home\" variant=\"contained\" color=\"primary\">\n          На главную\n        </Button>\n      </div>\n      <div className=\"mb-3\">\n        <Typography>\n          Добро пожаловать на страницу 404! Вы находитесь здесь, потому что ввели адрес страницы,\n          которая уже не существует или была перемещена по другому адресу.\n        </Typography>\n      </div>\n      <div>\n        <img src={deadEnd} alt=\"тупик\" style={{ width: '80%' }} />\n      </div>\n    </div>\n  );\n};\n\nexport default The404Page;\n","import React from 'react';\nimport './spinner.css';\nimport { Typography } from '@material-ui/core';\n\ntype Props = { valueText?: string };\n\nexport default function Spinner({ valueText }: Props) {\n  return (\n    <div className=\"spinner\" style={{ color: 'white', textAlign: 'center' }}>\n      {valueText && (\n        <Typography color=\"inherit\" variant=\"h4\">\n          {valueText}\n        </Typography>\n      )}\n\n      <div className=\"lds-spinner\">\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n}\n","interface TokenStorage {\n  getToken(): string | null;\n  setToken(newToken: string): void;\n  removeToken(): void;\n}\n\nconst tokenStorageKey = 'auth_token';\n\nexport const tokenStorage: TokenStorage = {\n  getToken: () => window.localStorage.getItem(tokenStorageKey),\n  setToken: (newToken: string) => window.localStorage.setItem(tokenStorageKey, newToken),\n  removeToken: () => window.localStorage.removeItem(tokenStorageKey),\n};\n","const { REACT_APP_SERVER_URL } = process.env;\nexport const baseUrl = REACT_APP_SERVER_URL;\n","import { tokenStorage } from '../token-storage';\nimport { HttpFetch } from '../../gateways/http-fetch/http-fetch';\n\nexport const httpNativeFetch: HttpFetch = {\n  post(url, data, headers?: { [key: string]: string }) {\n    return createFetchRequest(\n      url,\n      undefined,\n      data,\n      'POST',\n      headers ? headers : { 'Content-Type': 'application/json' },\n    );\n  },\n  put(url, data) {\n    return createFetchRequest(url, undefined, data, 'PUT');\n  },\n  get(url, params?: Record<string, string>, headers?: { [key: string]: string }) {\n    return createFetchRequest(\n      url,\n      params,\n      {},\n      'GET',\n      headers ? headers : { 'Content-Type': 'application/json' },\n    );\n  },\n};\n\nfunction createFetchRequest<TBody>(\n  url: string,\n  params: Record<string, string> | undefined,\n  data: TBody,\n  type: 'GET' | 'POST' | 'PUT',\n  headers?: { [key: string]: string },\n) {\n  const token = tokenStorage.getToken();\n  if (token && headers) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  if (params) {\n    url = url + '?' + new URLSearchParams(params);\n  }\n\n  return fetch(url, {\n    method: type, // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, cors, *same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: headers ? headers : { 'Content-Type': 'application/json' },\n    redirect: 'follow', // manual, *follow, error\n    referrer: 'no-referrer', // no-referrer, *client\n    body: type === 'GET' ? undefined : JSON.stringify(data), // тип данных в body должен соответвовать значению заголовка \"Content-Type\"\n  })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        if (response.status === 401) {\n          tokenStorage.removeToken();\n        } else if (response.status === 422) {\n          return response.json();\n        }\n      }\n      throw response;\n    })\n    .catch(error => {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    });\n}\n","import { httpNativeFetch } from './http-fetch-implementations/http-native-fetch';\n\nexport const httpFetch = httpNativeFetch;\n","import React from 'react';\nimport './root.css';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport default function Root(props: Props) {\n  const { children } = props;\n\n  return (\n    <section className=\"root\">\n      {/*<PwaButton />*/}\n      {/*<HeaderContainer />*/}\n      <main>{children}</main>\n      {/*<Footer />*/}\n    </section>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { httpFetch } from '../../services/http-fetch';\nimport { baseUrl } from '../../services/base-url';\n\nexport type User = {\n  first_name: string;\n  id: number;\n  is_token_attached: boolean;\n  last_name: string;\n  login: string;\n  middle_name: string;\n  organizations: number[];\n  role: number;\n  kis_art_id: string;\n};\n\nconst useUser = () => {\n  const path = document.location.pathname;\n  const [user, setUser] = useState<User>({\n    first_name: '',\n    id: 0,\n    is_token_attached: false,\n    last_name: '',\n    login: '',\n    middle_name: '',\n    organizations: [],\n    role: 0,\n    kis_art_id: '',\n  });\n  const [loading, setLoading] = useState(true);\n  const getUser = async () => {\n    const res = await httpFetch.get(\n      `${baseUrl}/user_info`,\n      {},\n      {\n        'Content-Type': 'multipart/form-data',\n      },\n    );\n\n    if (res && res.data) {\n      setUser(res.data);\n      setLoading(false);\n    } else {\n      document.location.href = '/';\n    }\n  };\n  const getUserCallback = useCallback(async () => {\n    await getUser();\n  }, []);\n  useEffect(() => {\n    if (path !== '/') {\n      getUserCallback();\n    } else {\n      setLoading(false);\n    }\n  }, [getUserCallback]);\n  return { user, loading };\n};\n\nexport default useUser;\n","import React, { createContext, Suspense } from 'react';\nimport './App.css';\nimport useRoutes from './hooks/routes';\nimport Spinner from './components/common/spinner/spinner';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ReactPWAInstallProvider from 'react-pwa-install';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport ruLocale from 'date-fns/locale/ru';\nimport Root from './components/root/root';\nimport useUser, { User } from './hooks/user';\nimport The404Page from '../routes/The404Page';\n\nexport const UserContext = createContext<{ user: User }>({\n  user: {\n    first_name: '',\n    id: 0,\n    is_token_attached: false,\n    last_name: '',\n    login: '',\n    middle_name: '',\n    organizations: [],\n    role: 0,\n    kis_art_id: '',\n  },\n});\n\nfunction App() {\n  const routes = useRoutes();\n  const { user, loading } = useUser();\n  if (loading) {\n    return <Spinner />;\n  }\n  return (\n    <Suspense fallback={<Spinner />}>\n      <UserContext.Provider value={{ user }}>\n        <ReactPWAInstallProvider enableLogging>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\n            <BrowserRouter>\n              <Root>\n                <Switch>\n                  {/*{user.first_name ? (*/}\n                  {/*  <>*/}\n                  {/*    {routes.map(({ id, path, exact, component }) => (*/}\n                  {/*      <Route key={id} exact={exact} path={path} component={component} />*/}\n                  {/*    ))}*/}\n                  {/*    <Redirect exact from=\"/\" to=\"/home\" />*/}\n                  {/*  </>*/}\n                  {/*) : (*/}\n                  {/*  <>*/}\n                  {/*    <Route*/}\n                  {/*      path=\"/\"*/}\n                  {/*      exact*/}\n                  {/*      component={React.lazy(() => import('../routes/login'))}*/}\n                  {/*    />*/}\n                  {/*    <Redirect to=\"/\" />*/}\n                  {/*  </>*/}\n                  {/*)}*/}\n                  {routes.map(({ id, path, exact, component }) => (\n                    <Route key={id} exact={exact} path={path} component={component} />\n                  ))}\n                  <Route component={The404Page} />\n                </Switch>\n              </Root>\n            </BrowserRouter>\n          </MuiPickersUtilsProvider>\n        </ReactPWAInstallProvider>\n      </UserContext.Provider>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport routes from '../../configs/routes.json';\n\ntype Routes = {\n  id: string;\n  path: string;\n  exact: boolean;\n  component: string;\n};\n\nexport default function useRoutes() {\n  return routes.map((route: Routes) => {\n    return {\n      id: route.id,\n      path: route.path,\n      exact: route.exact,\n      component: React.lazy(() => import(`../../routes/${route.component}`)),\n    };\n  });\n}\n"],"sourceRoot":""}